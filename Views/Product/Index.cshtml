@model ProductModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive User Attendance Details</title>
    <link href="~/css/home.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="main-container">
        <div class="button-container">
            <a class="button" asp-controller="RegisterProduct" asp-action="Index">Register New Product</a>
            <a class="button" asp-controller="" asp-action="">Generate Report</a>
            <a class="button" asp-controller="ProductAmountPaid" asp-action="Index">Add Paid Amount</a>
        </div>
        <div class="chart-container">
            <!-- Box 1: Total No of Employees in Company -->
            <div class="chart-item">
                <h3>Total No of Product</h3>
                <div class="number">@Model.Products.Count()</div> <!-- Replace 150 with actual value -->
            </div>
            <!-- Box 2: Total Earn in Year -->
            <div class="chart-item">
                <h3>Total Amount</h3>
                <div id="totalAmount" class="number">@ViewBag.TotalSum</div> <!-- Replace with actual value -->
            </div>
            <!-- Box 3: Total Spend in Salary -->
            <div class="chart-item">
                <h3>Total Amount Paid</h3>
                <div class="number">
                    @Model.chatDataofAmountPaid.TotalPendingAmount
                </div>
            </div>
        </div>
        <div class="chart-container">
            
            <div class="chart-item">
                <h3>Total Product by Month</h3>
                <canvas id="saleChart"></canvas>
            </div>
            
            <div class="chart-item">
                <h3>Total Product by Client</h3>
                <canvas id="profitChart"></canvas>
            </div>
            
            <div class="chart-item">
                <h3>Total Pending Amount by Client</h3>
                <canvas id="deliveryChart"></canvas>
            </div>
        </div>
        
        <div class="chart-item" style="grid-column: span 4">
            <h3>Employee Details Table</h3>
            <div style="overflow-x: auto; width: 100%;">
                <table id="employeeDetailsTable">
                    <thead>
                        <tr>
                            <th>ProductID</th>
                            <th>ProductName</th>
                            <th>ProductType</th>
                            <th>ProductSize</th>
                            <th>ClientName</th>
                            <th>Price</th>
                            <th>OrderDate</th>
                            <th>DeliveryDate</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (var item in Model.Products)
                            {
                                <tr>
                                    <td>@item.ProductID</td>
                                    <td>@item.ProductName</td>
                                    <td>@item.ProductType</td>
                                    <td>@item.ProductSize</td>
                                    <td>@item.ClientName</td>
                                    <td>@item.Price</td>
                                    <td>@item.OrderDate</td>
                                    <td>@item.DeliveryDate</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        // Serialize Razor data to JSON for safe use in JavaScript
        const chartProductByMonth = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ChartProductByMonth));
        const chartProductByClient = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ChartProductByClient));
        const chatDataofAmountPaid = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.chatDataofAmountPaid));
        const saleChart = new Chart(document.getElementById('saleChart'), {
            type: 'bar',
            data: {
                labels: chartProductByMonth.MonthName || [],
                datasets: [{
                    label: 'Products Sold',
                    data: chartProductByMonth.ProductCount || [],
                    backgroundColor: '#4bc0c0'
                }]
            }
        });

        const profitChart = new Chart(document.getElementById('profitChart'), {
            type: 'bar',
            data: {
                labels: chartProductByClient.ClientName,
                datasets: [{
                    label: 'Total Order Amount By Client',
                    data: chartProductByClient.ProductPriceSum, // dummy data
                    backgroundColor: '#36a2eb'
                }]
            }
        });

        const deliveryChart = new Chart(document.getElementById('deliveryChart'), {
            type: 'bar',
            data: {
                labels: chatDataofAmountPaid.ClientName,
                datasets: [{
                    label: 'Amount Paid By Client',
                    data: chatDataofAmountPaid.AmountPaid, // dummy data
                    backgroundColor: '#36a2eb'
                }]
            }
        });
    </script>
</body>
</html>